name: Test Template

on:
  workflow_call:
    inputs:
      job_name:
        required: true
        type: string
      principal_dir:
        required: false
        type: string
        default: "/"
      remove_android:
        required: false
        type: boolean
        default: false
      remove_dotnet:
        required: false
        type: boolean
        default: false
      remove_haskell:
        required: false
        type: boolean
        default: false
      remove_tool_cache:
        required: false
        type: boolean
        default: false
      remove_swap:
        required: false
        type: boolean
        default: false
      remove_packages:
        required: false
        type: string
        default: "false"
      remove_packages_one_command:
        required: false
        type: boolean
        default: false
      remove_folders:
        required: false
        type: string
        default: "false"
      testing:
        required: false
        type: boolean
        default: false
      generate_summary:
        required: false
        type: boolean
        default: true

jobs:
  test:
    strategy:
      matrix:
        rm_cmd: [rm, rmz]
        runner: 
          - ubuntu-latest
          - ubuntu-24.04-arm
    runs-on: ${{ matrix.runner }}
    name: ${{ inputs.job_name }} with ${{ matrix.rm_cmd }} on ${{ matrix.runner }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get initial disk space
        id: initial_space
        run: |
          INITIAL_SPACE=$(df -BG / | tail -1 | awk '{print $4}' | sed 's/G//')
          echo "space=${INITIAL_SPACE}" >> $GITHUB_OUTPUT

      - name: Free Disk Space
        id: free_space
        uses: ./
        with:
          principal_dir: ${{ inputs.principal_dir }}
          remove_android: ${{ inputs.remove_android }}
          remove_dotnet: ${{ inputs.remove_dotnet }}
          remove_haskell: ${{ inputs.remove_haskell }}
          remove_tool_cache: ${{ inputs.remove_tool_cache }}
          remove_swap: ${{ inputs.remove_swap }}
          remove_packages: ${{ inputs.remove_packages }}
          remove_packages_one_command: ${{ inputs.remove_packages_one_command }}
          remove_folders: ${{ inputs.remove_folders }}
          testing: ${{ inputs.testing }}
          rm_cmd: ${{ matrix.rm_cmd }}

      - name: Show all packages by size
        run: |
          dpkg-query -Wf '${Installed-Size}\t${Package}\n' | sort -n

      - name: Show free disk space
        run: df -h

      - name: Search more files
        run: |
          FOLDERS=(/etc /opt /home /var /usr /usr/share /usr/lib /usr/bin /usr/local/lib /usr/local/bin /usr/local/share)
          for folder in "${FOLDERS[@]}"; do
            echo "Folder: $folder"
            sudo du -h --max-depth=2 "$folder" | sort -h
            echo "-"
          done

      - name: Docker Hello World
        run: docker run hello-world

      - name: Run Python Hello World
        run: python -c "print('Hello, World!')"

      - name: Get final disk space
        id: final_space
        run: |
          FINAL_SPACE=$(df -BG / | tail -1 | awk '{print $4}' | sed 's/G//')
          echo "space=${FINAL_SPACE}" >> $GITHUB_OUTPUT

      - name: Generate test summary
        if: ${{ inputs.generate_summary }}
        run: |
          INITIAL=${{ steps.initial_space.outputs.space }}
          FINAL=${{ steps.final_space.outputs.space }}
          FREED=$((FINAL - INITIAL))
          
          # Cria diretório para summaries
          mkdir -p test-summaries
          
          # Gera identificador único para este teste
          TEST_ID="${{ inputs.job_name }}-${{ matrix.rm_cmd }}-${{ matrix.runner }}"
          TEST_ID_CLEAN=$(echo "$TEST_ID" | sed 's/[^a-zA-Z0-9-]/_/g')
          
          # Gera arquivo de summary
          cat > "test-summaries/${TEST_ID_CLEAN}.json" << EOF
          {
            "job_name": "${{ inputs.job_name }}",
            "runner": "${{ matrix.runner }}",
            "rm_cmd": "${{ matrix.rm_cmd }}",
            "initial_space_gb": ${INITIAL},
            "final_space_gb": ${FINAL},
            "freed_space_gb": ${FREED},
            "options": {
              "remove_android": ${{ inputs.remove_android }},
              "remove_dotnet": ${{ inputs.remove_dotnet }},
              "remove_haskell": ${{ inputs.remove_haskell }},
              "remove_tool_cache": ${{ inputs.remove_tool_cache }},
              "remove_swap": ${{ inputs.remove_swap }},
              "remove_packages": "${{ inputs.remove_packages }}",
              "remove_packages_one_command": ${{ inputs.remove_packages_one_command }},
              "remove_folders": "${{ inputs.remove_folders }}",
              "testing": ${{ inputs.testing }}
            },
            "timestamp": "$(date -u +%Y-%m-%dT%H:%M:%SZ)"
          }
          EOF
          
          echo "✅ Summary gerado: ${TEST_ID_CLEAN}.json"

      - name: Upload test summary
        if: ${{ inputs.generate_summary }}
        uses: actions/upload-artifact@v4
        with:
          name: test-summary-${{ inputs.job_name }}-${{ matrix.rm_cmd }}-${{ matrix.runner }}
          path: test-summaries/*.json
          retention-days: 7
